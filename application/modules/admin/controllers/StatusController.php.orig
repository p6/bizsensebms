<?php
/** Copyright (c) 2010, Sudheera Satyanarayana - http://techchorus.net, 
     Binary Vibes Information Technologies Pvt. Ltd. and contributors
 *  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *   * Neither the names of Sudheera Satyanarayana nor the names of the project
 *     contributors may be used to endorse or promote products derived from this
 *     software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */

class Admin_StatusController extends Zend_Controller_Action 
{
    /**
     *@var string status model
     */
    protected $_model;

    /**
     *initalize the model 
     */
    public function init()
    {
        $this->_model = new Core_Model_Status;
    }
 
    public function indexAction() 
    {
        
    }

    /**
     * View log entries
     */
    public function viewlogAction()
    {
        $form = new Core_Form_Status_Log;
        $form->setAction($this->_helper->url('viewlog', 'status', 'admin'));
        $this->view->form = $form;
        if ($this->getRequest()->isPost()) {
            if ($form->isValid($this->getRequest()->getPost())) {
                $logItems = new Core_Model_Bizlog;
                $paginator = $logItems->getPaginator($form->getValues(), $this->_getParam('sort'));
                $paginator->setCurrentPageNumber($this->_getParam('page'));
                $paginator->setItemCountPerPage(25);
                $this->view->paginator = $paginator;
            }
        }else {
            $logItems = new Core_Model_Bizlog;
            $paginator = $logItems->getPaginator($this->_getParam('search'), $this->_getParam('sort'));
            $paginator->setCurrentPageNumber($this->_getParam('page'));
            $paginator->setItemCountPerPage(25);
            $this->view->paginator = $paginator;
        }
    }

    /**
     * delete all log entries
     */
    public function clearlogAction()
    {
        $this->_helper->layout->disableLayout();
        $this->_helper->viewRenderer->setNoRender(true);  
        $bizlogModel = new Core_Model_Bizlog;
        $bizlogModel->deleteAllEntries();
        $this->_helper->FlashMessenger('Cleared log');
        $this->_helper->redirector('viewlog', 'status', 'admin');
    }
    
    /**
     * file permission
     */
     public function filepermissionAction()
     {
        $pathsToCheck = array(
            APPLICATION_PATH . '/configs',
            APPLICATION_PATH . '/data',
            APPLICATION_PATH . '/data/documents/image',
            APPLICATION_PATH . '/data/documents/invoice',
            APPLICATION_PATH . '/data/documents/receipt',
            APPLICATION_PATH . '/data/documents/reports',
            APPLICATION_PATH . '/data/documents/salesreturn',
            APPLICATION_PATH . '/data/quote',
            APPLICATION_PATH . '/data/quote/pdf',
            APPLICATION_PATH . '/data/logo',
            APPLICATION_PATH . '/data/log',
            PUBLIC_PATH . '/files/logo',
        );

        $filePermission = $this->_model->checkPermission($pathsToCheck); 
        $this->view->pathsToCheck = $pathsToCheck;
        $this->view->filePermission = $filePermission;
     }

    /**
     * cron status
     */ 
    public function cronAction() 
    {
        $variable = 'core_service_cron_lock';
        $variableModel = new Core_Model_Variable;
        $result = $variableModel->setVariable($variable)->getValue();
        $this->view->result = $result;
        if ($result) {
            $form = new Core_Form_Cron_Enable;
            $this->view->form = $form;
            $form->setAction($this->view->url(array(
                'module'        =>  'admin',
                'controller'    =>  'status',
                'action'        =>  'cron'
            ), null, true)); 

            $variableModel->save($variable,0);
            $this->_helper->FlashMessenger('Cron Lock Released Successfully');
        }
    }      

} 
